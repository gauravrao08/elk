```
filter {
         if [input][type] == "log" {
    mutate { replace => { "type" => "apache_access" } }

    grok {
    #  match => { "message" => "%{COMBINEDAPACHELOG}" }
       # remove_field => "message"
        #       match => { "message" => "%{COMMONAPACHELOG} %{QS:referrer} %{QS:agent}" }
                # match => { "message" => "%{COMMONAPACHELOG} %{QS:referrer} %{QS:agent} %{NUMBER:bytes_received} %{NUMBER:bytes_sents}" }
                match => { "message" => "%{COMMONAPACHELOG} %{QS:referrer} %{QUOTEDSTRING:agent_name} %{NUMBER:bytes_received} %{NUMBER:bytes_sents} %{NUMBER:response_time}" }
}

mutate {
        convert => {
          "response_time" => "integer"
        }
      }

     geoip {
        source => "clientip"
    }
  }
  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}
output {
  stdout { codec => rubydebug }
  if [log][file][path] == "/var/log/httpd/betapriceindex.usedcarsin.in_access_log" {
                elasticsearch {

                        hosts => ["localhost:9200"]
                        index => "betapriceindex.usedcarsin-access-%{+YYYY.MM.dd}"
                        user => elastic
                         password => m9pIYt6D6RvbXnN2BRB1
                }
     }
else {
        elasticsearch {
    hosts => ["localhost:9200"]
    #index => "insurance-access-log-%{+YYYY.MM.dd}"
     user => elastic
     password => m9pIYt6D6RvbXnN2BRB1
     }
}
}

```

```
filter {
         if [input][type] == "log" {
			mutate { replace => { "type" => "apache_access" } }
			grok {
			match => { "message" => "%{COMMONAPACHELOG} %{QS:referrer} %{QUOTEDSTRING:agent_name} %{NUMBER:bytes_received} %{NUMBER:bytes_sents} %{NUMBER:response_time}" }
			}

			mutate {
				convert => {
				"response_time" => "integer"
				}
			}

			 geoip {
			source => "clientip"
			}
		}
		  date {
						match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
		  }
}
```
